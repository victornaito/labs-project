name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
    CLIENT_PATH: src/services/client/Client.Api/Dockerfile
    WEATHER_PATH: src/services/weatherForecast/Labs.Api/Dockerfile.application

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    # - name: Test
    #   run: |
    #     docker run -p 80:80 -t container_test
    #     dotnet test --no-build --verbosity normal

  docker-registry:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4
    - name: LS -la
      run: ls -la
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Docker Build
      run: |
        docker build -f ${{ env.CLIENT_PATH }} --tag ${{ secrets.DOCKER_USER }}/cliente-api:latest .
        docker build -f ${{ env.WEATHER_PATH }} --tag ${{ secrets.DOCKER_USER }}/weather-api:latest .
    - name: Test
      run: |
        docker run ${{ secrets.DOCKER_USER }}/cliente-api:latest -p 80:80 .
        docker-compose up rabbitmq
        dotnet test --no-build --verbosity normal
    - name: Docker Push
      run: |
        docker push ${{ secrets.DOCKER_USER }}/cliente-api:latest
        docker push ${{ secrets.DOCKER_USER }}/weather-api:latest
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}