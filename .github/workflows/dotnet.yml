name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
  docker-registry:
    needs: build
    runs-on: ubuntu-latest
    steps:
    # - name: Docker Login Registry
    #   run: |
    #     docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}
    # - name: Docker Build Registry
    #   run: docker build -t naito10/cliente:1-develop-latest -f cliente/Cliente.Api/Dockerfile .
    # - name: Docker Push Registry
    #   run: docker push naito10/cliente:${{github.GITHUB_RUN_NUMBER}}-develop-latest
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./cliente/Cliente.Api/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags:  ${{ secrets.DOCKER_USER }}/naito10:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}